// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	user.proto

It has these top-level messages:
	UserInfoRequest
	UserListRequest
	UserInfoReply
	UserListReplay
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// UserInfoRequest 请求
type UserInfoRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *UserInfoRequest) Reset()                    { *m = UserInfoRequest{} }
func (m *UserInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*UserInfoRequest) ProtoMessage()               {}
func (*UserInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UserInfoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// UserListRequest 请求
type UserListRequest struct {
	Page     int64 `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize" json:"pageSize,omitempty"`
}

func (m *UserListRequest) Reset()                    { *m = UserListRequest{} }
func (m *UserListRequest) String() string            { return proto.CompactTextString(m) }
func (*UserListRequest) ProtoMessage()               {}
func (*UserListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UserListRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *UserListRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// UserInfoReply 用户详情响应
type UserInfoReply struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Nickname  string `protobuf:"bytes,3,opt,name=nickname" json:"nickname"`
	Mobile    string `protobuf:"bytes,4,opt,name=mobile" json:"mobile,omitempty"`
	Email     string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	Sex       int64  `protobuf:"varint,6,opt,name=sex" json:"sex"`
	Password  string `protobuf:"bytes,7,opt,name=password" json:"-"`
	Salt      string `protobuf:"bytes,8,opt,name=salt" json:"-"`
	CreatedAt string `protobuf:"bytes,9,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt string `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *UserInfoReply) Reset()                    { *m = UserInfoReply{} }
func (m *UserInfoReply) String() string            { return proto.CompactTextString(m) }
func (*UserInfoReply) ProtoMessage()               {}
func (*UserInfoReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UserInfoReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserInfoReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfoReply) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *UserInfoReply) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserInfoReply) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserInfoReply) GetSex() int64 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *UserInfoReply) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UserInfoReply) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

func (m *UserInfoReply) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *UserInfoReply) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

// UserListReplay 用户列表响应
type UserListReplay struct {
	Total    int64            `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	LastPage int64            `protobuf:"varint,2,opt,name=last_page,json=lastPage" json:"last_page,omitempty"`
	Data     []*UserInfoReply `protobuf:"bytes,3,rep,name=data" json:"data,omitempty"`
}

func (m *UserListReplay) Reset()                    { *m = UserListReplay{} }
func (m *UserListReplay) String() string            { return proto.CompactTextString(m) }
func (*UserListReplay) ProtoMessage()               {}
func (*UserListReplay) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UserListReplay) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *UserListReplay) GetLastPage() int64 {
	if m != nil {
		return m.LastPage
	}
	return 0
}

func (m *UserListReplay) GetData() []*UserInfoReply {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*UserInfoRequest)(nil), "pb.UserInfoRequest")
	proto.RegisterType((*UserListRequest)(nil), "pb.UserListRequest")
	proto.RegisterType((*UserInfoReply)(nil), "pb.UserInfoReply")
	proto.RegisterType((*UserListReplay)(nil), "pb.UserListReplay")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for User service

type UserClient interface {
	List(ctx context.Context, in *UserListRequest, opts ...grpc.CallOption) (*UserListReplay, error)
	Info(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoReply, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) List(ctx context.Context, in *UserListRequest, opts ...grpc.CallOption) (*UserListReplay, error) {
	out := new(UserListReplay)
	err := grpc.Invoke(ctx, "/pb.User/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Info(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoReply, error) {
	out := new(UserInfoReply)
	err := grpc.Invoke(ctx, "/pb.User/Info", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for User service

type UserServer interface {
	List(context.Context, *UserListRequest) (*UserListReplay, error)
	Info(context.Context, *UserInfoRequest) (*UserInfoReply, error)
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.User/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).List(ctx, req.(*UserListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.User/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Info(ctx, req.(*UserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _User_List_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _User_Info_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x65, 0x6d, 0x37, 0xd7, 0x2b, 0x4e, 0xbd, 0x8a, 0x84, 0x89, 0x30, 0x0a, 0x83, 0x3d, 0x55,
	0x98, 0x5f, 0xb0, 0x47, 0xc1, 0x07, 0xa9, 0xf8, 0x3c, 0xd2, 0x35, 0x8e, 0x68, 0xb6, 0xc6, 0x26,
	0x43, 0xe7, 0xbf, 0x0b, 0x92, 0x9b, 0x6c, 0xdd, 0xf0, 0xa9, 0xf7, 0x9c, 0x73, 0x93, 0x73, 0x38,
	0x0d, 0xc0, 0xc6, 0x88, 0x26, 0xd7, 0x4d, 0x6d, 0x6b, 0x8c, 0x74, 0x99, 0x8d, 0xe1, 0xfc, 0xd5,
	0x88, 0xe6, 0x71, 0xfd, 0x56, 0x17, 0xe2, 0x73, 0x23, 0x8c, 0x45, 0x84, 0x64, 0xcd, 0x57, 0x82,
	0x75, 0x46, 0x9d, 0x49, 0x5a, 0xd0, 0x9c, 0xcd, 0xfc, 0xda, 0x93, 0x34, 0xf6, 0x60, 0x4d, 0xf3,
	0xa5, 0x5f, 0x8b, 0x0b, 0x9a, 0x71, 0x08, 0x7d, 0xf7, 0x7d, 0x91, 0x3f, 0x82, 0x45, 0xc4, 0xef,
	0x71, 0xf6, 0xdb, 0x81, 0xb3, 0xd6, 0x4a, 0xab, 0x2d, 0x0e, 0x20, 0x92, 0x55, 0x38, 0x1f, 0xc9,
	0x6a, 0x6f, 0x1c, 0xb5, 0xc6, 0xee, 0xc6, 0xb5, 0x5c, 0x7c, 0x10, 0x1f, 0x13, 0xbf, 0xc7, 0x78,
	0x03, 0xbd, 0x55, 0x5d, 0x4a, 0x25, 0x58, 0x42, 0x4a, 0x40, 0x78, 0x0d, 0x5d, 0xb1, 0xe2, 0x52,
	0xb1, 0x2e, 0xd1, 0x1e, 0xe0, 0x05, 0xc4, 0x46, 0x7c, 0xb3, 0x1e, 0xd9, 0xb9, 0xd1, 0xa7, 0x35,
	0xe6, 0xab, 0x6e, 0x2a, 0x76, 0xe2, 0xef, 0xde, 0x61, 0x97, 0xc5, 0x70, 0x65, 0x59, 0xdf, 0x67,
	0x71, 0x33, 0xde, 0x01, 0x2c, 0x1a, 0xc1, 0xad, 0xa8, 0xe6, 0xdc, 0xb2, 0x94, 0x94, 0x34, 0x30,
	0x33, 0x92, 0x37, 0xba, 0xda, 0xc9, 0xe0, 0xe5, 0xc0, 0xcc, 0x6c, 0xf6, 0x0e, 0x83, 0xb6, 0x42,
	0xad, 0xf8, 0xd6, 0xe5, 0xb4, 0xb5, 0xe5, 0x2a, 0x54, 0xe0, 0x01, 0xde, 0x42, 0xaa, 0xb8, 0xb1,
	0x73, 0x2a, 0x37, 0x94, 0xe8, 0x88, 0x67, 0x57, 0xf0, 0x18, 0x92, 0x8a, 0x5b, 0xce, 0xe2, 0x51,
	0x3c, 0x39, 0x9d, 0x5e, 0xe6, 0xba, 0xcc, 0x8f, 0x3a, 0x2d, 0x48, 0x9e, 0x2e, 0x21, 0x71, 0x34,
	0xde, 0x43, 0xe2, 0xfc, 0xf0, 0x6a, 0xb7, 0x78, 0xf0, 0x03, 0x87, 0x78, 0x4c, 0x52, 0xa4, 0x1c,
	0x12, 0x77, 0x57, 0x7b, 0xe0, 0xe0, 0x61, 0x0c, 0xff, 0xdb, 0x95, 0x3d, 0x7a, 0x49, 0x0f, 0x7f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x72, 0x8c, 0x65, 0x82, 0x57, 0x02, 0x00, 0x00,
}
